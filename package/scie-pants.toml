[science]
name = "scie-pants"
description = "Isolates your Pants from the elements."
load_dotenv = true

[[science.interpreters]]
id = "cpython38"
provider = "science.providers.PBS"
lazy = true
version = "3.8"

[[science.interpreters]]
id = "cpython39"
provider = "science.providers.PBS"
lazy = true
version = "3.9"

[[science.files]]
name = "scie-pants.bin"
key = "scie-pants"
executable = true

[[science.files]]
name = "tools.pex"

[[science.commands]]
description = "Detects the current Pants installation and launches it."
exe = "{scie-pants}"

[[science.commands]]
name = "pants"
description = "Runs a hermetic Pants installation."
exe = "{scie.bindings.install:VIRTUAL_ENV}/bin/pants"
args = [
    "--pants-bin-name={scie.env.PANTS_BIN_NAME}",
    "{scie.bindings.configure:PANTS_SHA_FIND_LINKS}"
]
[science.commands.env.default]
PANTS_BUILDROOT_OVERRIDE = "{scie.bindings.configure:PANTS_BUILDROOT_OVERRIDE}"
[science.commands.env.replace]
PANTS_VERSION = "{scie.bindings.configure:PANTS_VERSION}"

[[science.commands]]
name = "pants-debug"
description = "Runs a hermetic Pants installation with a debug server for debugging Pants code."
exe = "{scie.bindings.install:VIRTUAL_ENV}/bin/python"
args = [
    "-c",
    "__import__(\"sys\").path.pop(0);print(\"Launching debugpy server at '127.0.0.1:5678' and waiting for client connection.\", file=__import__(\"sys\").stderr);__import__(\"debugpy.server.cli\").server.cli.main()",
    "--listen",
    "127.0.0.1:5678",
    "--wait-for-client",
    "{scie.bindings.install:VIRTUAL_ENV}/bin/pants",
    "--pants-bin-name={scie.env.PANTS_BIN_NAME}",
    "{scie.bindings.configure:PANTS_SHA_FIND_LINKS}"
]
[science.commands.env.default]
PANTS_BUILDROOT_OVERRIDE = "{scie.bindings.configure:PANTS_BUILDROOT_OVERRIDE}"
[science.commands.env.replace]
PANTS_VERSION = "{scie.bindings.configure:PANTS_VERSION}"

[[science.commands]]
name = "bootstrap-tools"
description = "Introspection tools for the Pants bootstrap process."
# TODO(John Sirois): XXX: Support dynamically selecting #{cpythonXY:python}
exe = "{scie.files.{scie.bindings.configure:PYTHON}-{scie.platform}}/python/bin/{scie.bindings.configure:PYTHON}"
args = [
      "{tools.pex}",
      "bootstrap-tools",
      "--python-distribution-hash",
      "{scie.files:hash.{scie.bindings.configure:PYTHON}-{scie.platform}}",
      "--pants-version",
      "{scie.bindings.configure:PANTS_VERSION}"
]
env.remove_re = [
    "PEX_.*"
]
[science.commands.env.replace]
PEX_ROOT = "{scie.bindings}/pex_root"
PEX_PYTHON_PATH = "{scie.files.{scie.bindings.configure:PYTHON}-{scie.platform}}/python/bin/{scie.bindings.configure:PYTHON}"

[[science.commands]]
name = "update"
description = "Update scie-pants."
exe = "#{cpython39:python}"
args = [
      "{tools.pex}",
      "update-scie-pants",
      "--ptex-path",
      "{ptex}",  # TODO(John Sirois): XXX: {ptex} is implicitly provided by science lazy = True, need to be able to explicitly request it and get said same.
      "--platform",
      "{scie.platform}",
      "--base-dir",
      "{scie.bindings}",
      "--scie",
      "{scie}",
      "--current-version",
      "{scie.bindings.scie-pants-info:VERSION}",
      "--github-api-bearer-token",
      "{scie.env.PANTS_BOOTSTRAP_GITHUB_API_BEARER_TOKEN}"
]
env.remove_re = [
    "PEX_.*"
]
[science.commands.env.replace]
PEX_ROOT = "{scie.bindings}/pex_root"
PEX_PYTHON_PATH = "{scie.files.python3.9-{scie.platform}}/python/bin/python3.9"

[[science.commands]]
# Sharp substitution always references an id and is the only substitution science performs. The
# rest of {...} flow through to the generated lift manifest JSON.
# The sharp substitution requires ids do not contain '{', '}' or ':'.
# A provider can define just 1 exported file, in which case #{provider-id} accesses it.
# A provider can define several exported files, in which case #{provider-id:file-id} accesses each.
# PBS proably will export `python`, and `pip`
exe = "#{cpython:python}"
args = [
  "{science.pex}",
]
env.remove_re = [
  "PEX_.*",
]
[science.commands.env.replace]
PEX_ROOT = "{scie.bindings}/pex_root"
PEX_PYTHON_PATH = "#{cpython:python}"

[[science.bindings]]
#        "bindings": {
#          "ptex-fetch": {
#            "description": "Fetches hermetic CPython distributions for Pants internal use.",
#            "exe": "{ptex}",
#            "args": [
# TODO(John Sirois): XXX: Support custom ptex (lazy = True) argv1 configuration.
#              "{scie.env.PANTS_BOOTSTRAP_URLS={scie.lift}}"
#            ]
#          },

[[science.bindings]]
#          "scie-pants-info": {
#            "description": "Records information about the current scie-pants binary.",
#            "env": {
#              "PEX_.*": null,
#              "=PEX_ROOT": "{scie.bindings}/pex_root",
#              "=PEX_PYTHON_PATH": "{scie.files.python3.9-{scie.platform}}/python/bin/python3.9"
#            },
#            "exe": "{scie.files.python3.9-{scie.platform}}/python/bin/python3.9",
#            "args": [
#              "{tools.pex}",
#              "record-scie-pants-info",
#              "--base-dir",
#              "{scie.bindings}",
#              "--scie",
#              "{scie}"
#            ]
#          },

[[science.bindings]]
#          "configure": {
#            "description": "Prompts the user for missing Pants configuration if needed.",
#            "env": {
#              "PEX_.*": null,
#              "=PEX_ROOT": "{scie.bindings}/pex_root",
#              "=PEX_PYTHON_PATH": "{scie.files.python3.9-{scie.platform}}/python/bin/python3.9",
#              "PANTS_VERSION_PROMPT_SALT": "{scie.env.PANTS_VERSION_PROMPT_SALT}"
#            },
#            "exe": "{scie.files.python3.9-{scie.platform}}/python/bin/python3.9",
#            "args": [
#              "{tools.pex}",
#              "configure-pants",
#              "--ptex-path",
#              "{ptex}",
#              "--pants-version",
#              "{scie.env.PANTS_VERSION}",
#              "--pants-sha",
#              "{scie.env.PANTS_SHA}",
#              "--pants-config",
#              "{scie.env.PANTS_TOML}",
#              "--github-api-bearer-token",
#              "{scie.env.PANTS_BOOTSTRAP_GITHUB_API_BEARER_TOKEN}",
#              "{scie.bindings}"
#            ]
#          },

[[science.bindings]]
#          "install": {
#            "description": "Installs a hermetic Pants environment from PyPI or binaries.pantsbuild.org with optional debug support.",
#            "env": {
#              "PEX_.*": null,
#              "=PEX_ROOT": "{scie.bindings}/pex_root",
#              "=PEX_PYTHON_PATH": "{scie.files.{scie.bindings.configure:PYTHON}-{scie.platform}}/python/bin/{scie.bindings.configure:PYTHON}"
#            },
#            "exe": "{scie.files.{scie.bindings.configure:PYTHON}-{scie.platform}}/python/bin/{scie.bindings.configure:PYTHON}",
#            "args": [
#              "{tools.pex}",
#              "install-pants",
#              "--pants-version",
#              "{scie.bindings.configure:PANTS_VERSION}",
#              "--find-links",
#              "{scie.bindings.configure:FIND_LINKS}",
#              "--debug",
#              "{scie.env.PANTS_DEBUG}",
#              "--debugpy-requirement",
#              "{scie.env.PANTS_DEBUGPY_VERSION}",
#              "{scie.bindings}"
#            ]
#          }

[[science.bindings]]

#      "files": [
#        {
#          "name": "ptex",
#          "executable": true
#        },

#  "ptex": {
#    "cpython-3.8.15+20221106-aarch64-unknown-linux-gnu-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.8.15+20221106-aarch64-unknown-linux-gnu-install_only.tar.gz",
#    "cpython-3.8.15+20221106-x86_64-unknown-linux-gnu-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.8.15+20221106-x86_64-unknown-linux-gnu-install_only.tar.gz",
#    "cpython-3.8.15+20221106-aarch64-apple-darwin-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.8.15+20221106-aarch64-apple-darwin-install_only.tar.gz",
#    "cpython-3.8.15+20221106-x86_64-apple-darwin-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.8.15+20221106-x86_64-apple-darwin-install_only.tar.gz",
#    "cpython-3.9.15+20221106-aarch64-unknown-linux-gnu-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.9.15+20221106-aarch64-unknown-linux-gnu-install_only.tar.gz",
#    "cpython-3.9.15+20221106-x86_64-unknown-linux-gnu-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.9.15+20221106-x86_64-unknown-linux-gnu-install_only.tar.gz",
#    "cpython-3.9.15+20221106-aarch64-apple-darwin-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.9.15+20221106-aarch64-apple-darwin-install_only.tar.gz",
#    "cpython-3.9.15+20221106-x86_64-apple-darwin-install_only.tar.gz": "https://github.com/indygreg/python-build-standalone/releases/download/20221106/cpython-3.9.15+20221106-x86_64-apple-darwin-install_only.tar.gz"
#  }
#}
